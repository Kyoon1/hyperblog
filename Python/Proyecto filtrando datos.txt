El trabajo en clase era hacer alo la inversa 
primer trabajo


def run():
    all_python_devs = [worker["name"] for worker in DATA if worker["language"] == "python"]
    all_platzi_worker =[worker["name"] for worker in DATA if worker["organization"] == "Platzi"]
    adults = list(filter(lambda worker: worker["age"] > 18, DATA ))
    adults = list(map(lambda worker: worker ["name"], adults))
    old_people = list(map(lambda worker: worker | {"old": worker["age"] > 70}, DATA))
    # for worker in all_python_devs:
    #     print(worker)

    # for worker in adults:
    #     print(worker)

    for worker in old_people:
        print(worker)

    # for worker in all_platzi_worker:
    #     print(worker)

if __name__=='__main__':
    run()
---------------------------------------------------------------------------------

inverso

#Con list comprehensions
adults = [worker ['name'] for worker in DATA if worker ['age'] > 18]
old_people = [{**worker, **{'old': worker['age'] > 70}} for worker in DATA]

#Con high order functions
all_python_devs = list(filter(lambda worker: worker['language'] == 'python', DATA))
all_python_devs = list(map(lambda worker: worker['name'], all_python_devs))

all_platzi_workers = list(filter(lambda worker: worker['organization'] == 'Platzi', DATA))
all_platzi_workers = list(map(lambda worker: worker['name'], all_platzi_workers))

------------------------------------------------------------------------------------

Explicacin sobre la funcion old_people 

Es sencillo, más bien lo que se tiene que entender es como agregar una nueva key a un diccionario.

En mi caso tengo python 3.8.3, por lo que utilicé la sintaxis
z = {**x, **y} --> para sumar diccionarios o agregar una nueva key.

{**worker, **{'old': worker['age'] > 70}} for worker in DATA
Leeyendo esta linea de código sería algo así:
Para el diccionario worker en DATA, voy a guardar en ese mismo diccionario una nueva key llamada old que regrese un True si la key age es mayor a 70, y que regrese un False si es menor a 70.

Si tienes Python 3.9 tendrás que utilizar esta sintaxis:
z = x | y

ejemplo con z = x | y 

 old_people_lc=[worker| {"old":worker["age"]>70} for worker in DATA]
------------------------------------------------------------------------------------------

Ejercicios en una sola linea 

all_platzi_workers = list (map( lambda x : x[‘name’] , filter ( lambda x: x[‘organization’]==‘Platzi’ , DATA)) 

all_python_devs = list (map( lambda x : x[‘name’] , filter ( lambda x: x[‘language’]==‘python’ , DATA)))

---------------------------------------------------------------------------------------------

DATOS PARA LA PRACTICA

DATA = [
    {
        'name': 'Facundo',
        'age': 72,
        'organization': 'Platzi',
        'position': 'Technical Coach',
        'language': 'python',
    },
    {
        'name': 'Luisana',
        'age': 33,
        'organization': 'Globant',
        'position': 'UX Designer',
        'language': 'javascript',
    },
    {
        'name': 'Héctor',
        'age': 19,
        'organization': 'Platzi',
        'position': 'Associate',
        'language': 'ruby',
    },
    {
        'name': 'Gabriel',
        'age': 20,
        'organization': 'Platzi',
        'position': 'Associate',
        'language': 'javascript',
    },
    {
        'name': 'Isabella',
        'age': 30,
        'organization': 'Platzi',
        'position': 'QA Manager',
        'language': 'java',
    },
    {
        'name': 'Karo',
        'age': 23,
        'organization': 'Everis',
        'position': 'Backend Developer',
        'language': 'python',
    },
    {
        'name': 'Ariel',
        'age': 32,
        'organization': 'Rappi',
        'position': 'Support',
        'language': '',
    },
    {
        'name': 'Juan',
        'age': 17,
        'organization': '',
        'position': 'Student',
        'language': 'go',
    },
    {
        'name': 'Pablo',
        'age': 32,
        'organization': 'Master',
        'position': 'Human Resources Manager',
        'language': 'python',
    },
    {
        'name': 'Lorena',
        'age': 56,
        'organization': 'Python Organization',
        'position': 'Language Maker',
        'language': 'python',
    },
]